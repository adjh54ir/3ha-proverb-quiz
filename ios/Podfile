######## 최상단
require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/react-native-permissions/scripts/setup'

######## 해당 내용을 추가합니다.
def node_require(script)
  # Resolve script with node to allow for hoisting
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
  end

platform :ios, '16.0'
prepare_react_native_project!


$RNFirebaseAnalyticsWithoutAdIdSupport = true
$RNFirebaseAnalyticsEnableAdSupport = true
$RNFirebaseAsStaticFramework = true


setup_permissions([
  'Notifications',
  'Camera',
])


linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'ProverbQuiz' do
  config = use_native_modules!
  
  # [firebase] Google Firebase option
  use_frameworks! :linkage => :static
  
  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )


   post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
    )

   installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '14.3'
        config.build_settings['ENABLE_BITCODE'] = 'NO'
        config.build_settings['DEBUG_INFORMATION_FORMAT'] = 'dwarf-with-dsym'
      end
    end

    # ✅ Xcode 16 대응 - 비트코드 제거 (자동 스캔)
    require 'fileutils'
    bitcode_strip_path = `xcrun --find bitcode_strip`.strip

    def strip_bitcode_from_framework(bitcode_strip_path, framework_path)
      full_path = File.join(Dir.pwd, framework_path)
      binary_name = File.basename(full_path)
      binary_path = File.join(full_path, binary_name)
      if File.exist?(binary_path)
        puts "🔧 Stripping bitcode: #{binary_path}"
        system("#{bitcode_strip_path} #{binary_path} -r -o #{binary_path}")
      end
    end

    Dir.glob("ios/Pods/**/*.framework").each do |framework_dir|
      strip_bitcode_from_framework(bitcode_strip_path, framework_dir)
    end
  end
end
